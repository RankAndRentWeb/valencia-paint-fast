---
import SiteLayout from '../layouts/SiteLayout.astro';

export interface Props {
  meta: {
    title: string;
    description: string;
    canonical: string;
    ogImage?: string;
  };
  hero: {
    title: string;
    subtitle: string;
    priceHtml?: string;
    badges?: string[];
    features?: string[];
    img: any;
  };
  blocks?: {
    problem?: {
      title: string;
      items: string[];
    };
    solution?: {
      title: string;
      items: string[];
    };
    process?: string[];
    prose?: string;
    faq?: Array<{
      q: string;
      a: string;
    }>;
  };
}

const { meta, hero, blocks = {} } = Astro.props;

const localBusinessSchema = {
  "@context": "https://schema.org",
  "@type": "LocalBusiness",
  "@id": "https://pintores-valencia.com/#business",
  "name": "Pintores en Valencia",
  "url": "https://pintores-valencia.com",
  "image": "https://pintores-valencia.com/og-home.webp",
  "telephone": "+34722208131",
  "address": {
    "@type": "PostalAddress",
    "addressLocality": "Valencia",
    "addressRegion": "Comunitat Valenciana",
    "postalCode": "46000",
    "addressCountry": "ES"
  },
  "openingHours": ["Mo-Sa 08:00-20:00"],
  "priceRange": "€€",
  "areaServed": [{ "@type": "City", "name": "Valencia" }]
};
---

<SiteLayout 
  title={meta.title}
  description={meta.description}
  canonical={meta.canonical}
  ogImage={meta.ogImage}
  schema={[localBusinessSchema]}
>
  <main class="flex-1">
    <!-- Hero Section -->
    <section class="py-12 bg-gradient-to-br from-slate-50 to-blue-50">
      <div class="container mx-auto px-4">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 items-center">
          
          <!-- Left side - Content -->
          <div>
            <!-- Badges -->
            {hero.badges && (
              <div class="flex flex-wrap gap-2 mb-4">
                {hero.badges.map(badge => (
                  <span class="bg-white/90 text-gray-800 px-3 py-1 rounded-full text-sm font-medium shadow-sm border border-gray-100">
                    {badge}
                  </span>
                ))}
              </div>
            )}
            
            <!-- Title -->
            <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">{hero.title}</h1>
            
            <!-- Subtitle -->
            <p class="text-xl text-gray-700 mb-6">{hero.subtitle}</p>
            
            <!-- Price -->
            {hero.priceHtml && (
              <div class="mb-6">
                <span class="text-2xl font-bold text-accent" set:html={hero.priceHtml}></span>
              </div>
            )}
            
            <!-- CTAs -->
            <div class="flex flex-col sm:flex-row gap-4 mb-8">
              <a href="/presupuesto/" class="h-11 px-6 rounded-md bg-accent hover:bg-accent/90 text-white font-semibold shadow flex items-center justify-center">
                Presupuesto Gratis
              </a>
              <a href="tel:+34722208131" class="h-11 px-6 rounded-md bg-blue-600 hover:bg-blue-700 text-white font-semibold inline-flex items-center justify-center gap-2">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"></path>
                </svg>
                722 208 131
              </a>
            </div>
            
            <!-- Features -->
            {hero.features && (
              <div class="space-y-2">
                {hero.features.map(feature => (
                  <div class="flex items-center space-x-3">
                    <svg class="w-5 h-5 text-orange-500 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                    </svg>
                    <span class="text-gray-700">{feature}</span>
                  </div>
                ))}
              </div>
            )}
          </div>
          
          <!-- Right side - Image -->
          <div class="order-first lg:order-last">
            <div class="relative rounded-2xl overflow-hidden shadow-xl">
              <img
                src={hero.img.src}
                alt={hero.title}
                width={hero.img.width}
                height={hero.img.height}
                class="w-full h-auto object-cover"
                loading="lazy"
              />
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Problem/Solution Boxes -->
    {(blocks.problem || blocks.solution) && (
      <section class="py-12">
        <div class="container mx-auto px-4">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            
            <!-- Problem Box -->
            {blocks.problem && (
              <div class="bg-red-50 border border-red-200 rounded-lg p-6">
                <h2 class="text-xl font-bold text-red-900 mb-4">{blocks.problem.title}</h2>
                <ul class="space-y-2">
                  {blocks.problem.items.map(item => (
                    <li class="flex items-start space-x-2">
                      <span class="text-red-500 mt-1">•</span>
                      <span class="text-red-800">{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}
            
            <!-- Solution Box -->
            {blocks.solution && (
              <div class="bg-green-50 border border-green-200 rounded-lg p-6">
                <h2 class="text-xl font-bold text-green-900 mb-4">{blocks.solution.title}</h2>
                <ul class="space-y-2">
                  {blocks.solution.items.map(item => (
                    <li class="flex items-start space-x-2">
                      <svg class="w-5 h-5 text-green-600 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                      </svg>
                      <span class="text-green-800">{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        </div>
      </section>
    )}

    <!-- Process -->
    {blocks.process && (
      <section class="py-12 bg-gray-50">
        <div class="container mx-auto px-4">
          <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">Proceso</h2>
          <ol class="grid md:grid-cols-2 gap-3 list-decimal ml-6 text-gray-700 max-w-4xl mx-auto">
            {blocks.process.map(step => (
              <li class="mb-2">{step}</li>
            ))}
          </ol>
        </div>
      </section>
    )}

    <!-- Prose Section -->
    {blocks.prose && (
      <section class="container mx-auto px-4 prose lg:prose-lg max-w-none mb-12" set:html={blocks.prose} />
    )}

    <!-- FAQ -->
    {blocks.faq && blocks.faq.length > 0 && (
      <section class="py-12">
        <div class="container mx-auto px-4">
          <div class="max-w-3xl mx-auto">
            <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">Preguntas frecuentes</h2>
            <div class="bg-white border rounded-lg overflow-hidden">
              {blocks.faq.map((item, index) => (
                <details class="border-b border-gray-200 last:border-b-0">
                  <summary class="p-4 cursor-pointer hover:bg-gray-50 font-semibold text-gray-900">
                    {item.q}
                  </summary>
                  <div class="px-4 pb-4 text-gray-700">
                    {item.a}
                  </div>
                </details>
              ))}
            </div>
          </div>
        </div>
      </section>
    )}

  </main>
</SiteLayout>