---
const { entry } = Astro.props;
const { Content, data } = await entry.render();
---

<section class="container mx-auto px-4 py-10 grid lg:grid-cols-2 gap-10">
  <div>
    {data.badges && data.badges.length > 0 && (
      <div class="flex flex-wrap items-center gap-2 mb-4">
        {data.badges.map((b) => (
          <span class="text-sm px-3 py-1 rounded-full bg-orange-50 text-orange-700 border border-orange-200">{b}</span>
        ))}
      </div>
    )}
    <h1 class="text-4xl md:text-5xl font-extrabold text-gray-800 mb-4">{data.title}</h1>
    {data.subtitle && <p class="text-lg text-gray-600 mb-4">{data.subtitle}</p>}
    {(data.priceFrom && data.priceUnit) && (
      <p class="text-2xl font-bold text-blue-700 mb-6">
        desde {data.priceFrom}{data.priceUnit} 
        <span class="text-sm text-gray-500 font-normal">Material incluido</span>
      </p>
    )}
    <div class="flex flex-wrap gap-3 mb-8">
      <a href="/presupuesto/" class="h-11 px-6 rounded-md bg-accent hover:bg-accent/90 text-white font-semibold shadow inline-flex items-center">
        Pedir presupuesto gratis
      </a>
      <a href="tel:+34722208131" class="h-11 px-6 rounded-md bg-blue-600 hover:bg-blue-700 text-white font-semibold inline-flex items-center gap-2">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
        </svg>
        <span class="hidden sm:inline">722 208 131</span>
      </a>
    </div>
    {data.bullets && data.bullets.length > 0 && (
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 my-6">
        {data.bullets.map(b => (
          <div class="flex items-center gap-2 text-gray-700">
            <svg class="w-6 h-6 text-orange-600 flex-shrink-0" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M21.8 10a10 10 0 1 1-4.8-6.7"/>
              <path d="m9 11 3 3L22 4"/>
            </svg>
            <span class="font-medium">{b.label}</span>
          </div>
        ))}
      </div>
    )}
  </div>
  <div>
    {data.heroImage && (
      <img 
        src={data.heroImage} 
        alt={data.title} 
        class="w-full rounded-2xl shadow-lg object-cover aspect-[4/3]" 
        loading="lazy" 
      />
    )}
  </div>
</section>

{(data.problem || data.solution) && (
<section class="container mx-auto px-4 grid md:grid-cols-2 gap-6 mb-10">
  {data.problem && (
    <div class="rounded-2xl border border-red-200 bg-red-50 p-6">
      <h2 class="text-xl font-bold text-red-800 mb-3">{data.problem.title}</h2>
      <ul class="list-disc ml-5 text-red-900 space-y-1">
        {data.problem.items.map(i => <li>{i}</li>)}
      </ul>
    </div>
  )}
  {data.solution && (
    <div class="rounded-2xl border border-green-200 bg-green-50 p-6">
      <h2 class="text-xl font-bold text-green-800 mb-3">{data.solution.title}</h2>
      <ul class="list-disc ml-5 text-green-900 space-y-1">
        {data.solution.items.map(i => <li>{i}</li>)}
      </ul>
    </div>
  )}
</section>
)}

{data.process && data.process.length > 0 && (
<section class="container mx-auto px-4 mb-12">
  <h2 class="text-2xl font-bold mb-6 text-gray-800">Nuestro proceso</h2>
  <ol class="grid md:grid-cols-2 gap-4 text-gray-700">
    {data.process.map((p, index) => (
      <li class="flex items-start gap-3">
        <span class="flex-shrink-0 w-6 h-6 bg-orange-600 text-white text-sm font-bold rounded-full flex items-center justify-center">
          {index + 1}
        </span>
        <span>{p}</span>
      </li>
    ))}
  </ol>
</section>
)}

<section class="container mx-auto px-4 prose prose-lg max-w-none mb-12">
  <Content />
</section>

{data.faq && data.faq.length > 0 && (
<section class="container mx-auto px-4 mb-16">
  <h2 class="text-2xl font-bold mb-6 text-gray-800">Preguntas frecuentes</h2>
  <div class="divide-y border rounded-xl bg-white shadow-sm">
    {data.faq.map(f => (
      <details class="p-4 group">
        <summary class="cursor-pointer font-semibold text-gray-800 hover:text-orange-600 transition-colors">
          {f.q}
        </summary>
        <p class="mt-3 text-gray-600 leading-relaxed">{f.a}</p>
      </details>
    ))}
  </div>
</section>
)}