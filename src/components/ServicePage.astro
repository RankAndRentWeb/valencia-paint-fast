---
const { entry } = Astro.props;
const { Content } = await entry.render();
const data = entry.data;
const hasImg = !!data?.heroImage;
---

<section class="container mx-auto px-4 py-10 grid lg:grid-cols-2 gap-10">
  <div>
    {data.badges?.length && (
      <div class="flex flex-wrap items-center gap-2 mb-4">
        {data.badges.map((b) => <span class="text-sm px-3 py-1 rounded-full bg-orange-50 text-orange-700 border border-orange-200">{b}</span>)}
      </div>
    )}
    <h1 class="text-4xl md:text-5xl font-extrabold text-gray-800 mb-4">{data.title}</h1>
    {data.subtitle && <p class="text-lg text-gray-600 mb-4">{data.subtitle}</p>}
    {(data.priceFrom && data.priceUnit) && (
      <p class="text-2xl font-bold text-blue-700 mb-6">
        desde {data.priceFrom}{data.priceUnit} <span class="text-sm text-gray-500 font-normal">Material incluido</span>
      </p>
    )}
    <div class="flex flex-wrap gap-3 mb-8">
      <a href="/presupuesto/" class="h-11 px-6 rounded-md bg-accent hover:bg-accent/90 text-white font-semibold shadow flex items-center">Pedir presupuesto gratis</a>
      <a href="tel:+34722208131" class="h-11 px-6 rounded-md bg-blue-600 hover:bg-blue-700 text-white font-semibold inline-flex items-center gap-2">
        722 208 131
      </a>
    </div>
    {data.bullets?.length && (
      <div class="grid grid-cols-3 gap-6 my-6">
        {data.bullets.map(b => (
          <div class="flex items-center gap-2 text-gray-700">
            <svg class="w-6 h-6 text-orange-600" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M21.8 10a10 10 0 1 1-4.8-6.7"/><path d="m9 11 3 3L22 4"/></svg>
            <span>{b.label}</span>
          </div>
        ))}
      </div>
    )}
  </div>

  <div>
    {hasImg && (
      <img src={data.heroImage} width={data.heroWidth ?? 900} height={data.heroHeight ?? 600}
           alt={data.title} class="w-full rounded-2xl shadow-lg object-cover" loading="lazy" decoding="async" />
    )}
  </div>
</section>

<section class="container mx-auto px-4 grid md:grid-cols-2 gap-6 mb-10">
  {data.problem && (
    <div class="rounded-2xl border border-red-200 bg-red-50 p-6">
      <h2 class="text-xl font-bold text-red-800 mb-3">{data.problem.title}</h2>
      <ul class="list-disc ml-5 text-red-900">{data.problem.items.map(i => <li>{i}</li>)}</ul>
    </div>
  )}
  {data.solution && (
    <div class="rounded-2xl border border-green-200 bg-green-50 p-6">
      <h2 class="text-xl font-bold text-green-800 mb-3">{data.solution.title}</h2>
      <ul class="list-disc ml-5 text-green-900">{data.solution.items.map(i => <li>{i}</li>)}</ul>
    </div>
  )}
</section>

{data.process?.length && (
<section class="container mx-auto px-4 mb-12">
  <h2 class="text-2xl font-bold mb-4">Nuestro proceso</h2>
  <ol class="grid md:grid-cols-2 gap-3 list-decimal ml-6 text-gray-700">{data.process.map(p => <li>{p}</li>)}</ol>
</section>
)}

<section class="container mx-auto px-4 prose lg:prose-lg max-w-none mb-12">
  <Content />
</section>

{data.faq?.length && (
<section class="container mx-auto px-4 mb-16">
  <h2 class="text-2xl font-bold mb-4">Preguntas frecuentes</h2>
  <div class="divide-y border rounded-xl">
    {data.faq.map(f => (
      <details class="p-4">
        <summary class="cursor-pointer font-semibold">{f.q}</summary>
        <p class="mt-2 text-gray-600">{f.a}</p>
      </details>
    ))}
  </div>
</section>
)}